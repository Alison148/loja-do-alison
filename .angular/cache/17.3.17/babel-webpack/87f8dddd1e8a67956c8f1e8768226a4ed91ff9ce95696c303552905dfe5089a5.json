{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport Swal from 'sweetalert2';\nimport { ProdutoService } from '../../services/produto.service';\nlet PdvComponent = class PdvComponent {\n  constructor(service) {\n    this.service = service;\n    this.operador = 'Alison Antunes';\n    this.fundoDeCaixa = 100.00;\n    this.formaPagamento = 'dinheiro';\n    this.parcelas = 1;\n    this.valorPago = 0;\n    this.notaGerada = false;\n    this.dataHoje = new Date().toLocaleDateString();\n    this.opcoesParcelas = [1, 2, 3, 4, 5, 6, 10, 12];\n    this.carrinho = [];\n  }\n  ngOnInit() {\n    this.carrinho = this.service.obterProdutosParaPdV();\n  }\n  total() {\n    return this.carrinho.reduce((soma, item) => soma + item.preco * (item.quantidade || 1), 0);\n  }\n  calcularTroco() {\n    return this.formaPagamento === 'dinheiro' ? this.valorPago - this.total() : 0;\n  }\n  finalizarCompra() {\n    Swal.fire({\n      title: 'Confirmar Compra?',\n      text: `Total: R$ ${this.total().toFixed(2)} - Forma: ${this.formaPagamento}`,\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonText: 'Sim',\n      cancelButtonText: 'Cancelar'\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.notaGerada = true;\n      }\n    });\n  }\n  imprimirNota() {\n    const conteudo = document.getElementById('notaFiscal')?.innerHTML;\n    const janela = window.open('', '', 'width=800,height=600');\n    if (janela && conteudo) {\n      janela.document.write('<html><head><title>Nota Fiscal</title></head><body>');\n      janela.document.write(conteudo);\n      janela.document.write('</body></html>');\n      janela.document.close();\n      janela.print();\n    }\n  }\n  novaCompra() {\n    this.carrinho = [];\n    this.notaGerada = false;\n    this.valorPago = 0;\n    this.parcelas = 1;\n    this.formaPagamento = 'dinheiro';\n  }\n};\nPdvComponent = __decorate([Component({\n  selector: 'app-pdv',\n  templateUrl: './pdv.component.html'\n}), __metadata(\"design:paramtypes\", [ProdutoService])], PdvComponent);\nexport { PdvComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}