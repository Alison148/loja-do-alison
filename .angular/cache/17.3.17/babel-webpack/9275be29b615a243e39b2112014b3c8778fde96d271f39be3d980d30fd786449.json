{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let ProdutoService = /*#__PURE__*/(() => {\n  class ProdutoService {\n    constructor() {\n      this.produtos = [];\n      this.carrinho = [];\n      this.vendas = [];\n    }\n    // Produtos\n    listarProdutos() {\n      return this.produtos.filter(p => p.quantidade > 0);\n    }\n    adicionarProduto(produto) {\n      const existente = this.produtos.find(p => p.id === produto.id);\n      if (!existente) {\n        this.produtos.push(produto);\n      } else {\n        existente.quantidade += produto.quantidade;\n      }\n    }\n    baixarEstoque(id, qtd) {\n      const prod = this.produtos.find(p => p.id === id);\n      if (prod && prod.quantidade >= qtd) {\n        prod.quantidade -= qtd;\n      }\n    }\n    // Carrinho\n    adicionarAoCarrinho(produto) {\n      const existente = this.carrinho.find(p => p.id === produto.id);\n      if (existente) {\n        existente.quantidade += 1;\n      } else {\n        this.carrinho.push({\n          ...produto,\n          quantidade: 1\n        });\n      }\n    }\n    listarCarrinho() {\n      return this.carrinho;\n    }\n    limparCarrinho() {\n      this.carrinho = [];\n    }\n    enviarParaPdV(produtos) {\n      this.carrinho = produtos;\n    }\n    // Vendas\n    registrarVenda(venda) {\n      this.vendas.push(venda);\n    }\n    listarVendas() {\n      return this.vendas;\n    }\n    static {\n      this.ɵfac = function ProdutoService_Factory(t) {\n        return new (t || ProdutoService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ProdutoService,\n        factory: ProdutoService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ProdutoService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}